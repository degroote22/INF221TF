# import UfvClass, Department, User, UfvCourses, UfvYears, Review, ReviewVotesKind, ReviewVotes from "./generated/prisma.graphql"

enum ClassesRanks {
  Useful
  Easy
  Recommended
}

input UfvListClassesInput {
  sort: ClassesRanks!
  department: Department
  optional: Boolean
}

input SearchInput {
  value: String!
}

union SearchResult = UfvClass | User

input UserInput {
  id: String!
}

input UfvClassInput {
  id: String
  cod: String
}

input VoteWhereInput {
  reviewId: String!
}

input ReviewsWhereInput {
  userId: String!
  first: Int!
}

input ReviewWhereInput {
  id: String!
}

type Query {
  searchAll(where: SearchInput!): [SearchResult!]!
  listClasses(where: UfvListClassesInput!): [UfvClass!]!
  user(where: UserInput!): User
  ufvClass(where: UfvClassInput!): UfvClass
  reviews(where: ReviewsWhereInput!): [Review!]!
  review(where: ReviewWhereInput!): Review

  me: User
  myvote(where: VoteWhereInput!): ReviewVotes
  myreviews: [Review!]!
  myvotes: [ReviewVotes!]!
}

input UserRegisterInput {
  course: UfvCourses!
  year: UfvYears!
}

input CreateReviewData {
  cod: String!
  teacher: String!
  useful: ReviewUseful!
  easy: ReviewEasy!
  description: String!
  anonymous: Boolean!
  recommended: Boolean!
}

input EditReviewData {
  id: String!
  cod: String!
  teacher: String!
  useful: ReviewUseful!
  easy: ReviewEasy!
  description: String!
  anonymous: Boolean!
  recommended: Boolean!
}

input SetVoteData {
  reviewId: String!
  type: ReviewVotesTypes!
}

type Mutation {
  register(user: UserRegisterInput!): User!
  deleteAcc: User
  createReview(data: CreateReviewData!): Review
  editReview(data: EditReviewData!): Review
  setVote(data: SetVoteData!): ReviewVotes
}
